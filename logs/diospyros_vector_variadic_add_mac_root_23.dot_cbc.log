Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /work/zhang-x2/users/yc2632/miniconda3/envs/newpt2/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4d381f3867eb41a48eabab768128fcc3-pulp.mps sec 900 timeMode elapsed branch printingOptions all solution /tmp/4d381f3867eb41a48eabab768128fcc3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2358 COLUMNS
At line 15539 RHS
At line 17893 BOUNDS
At line 18497 ENDATA
Problem MODEL has 2353 rows, 603 columns and 10965 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 900
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.001 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 440 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 924 rows, 268 columns (205 integer (205 of which binary)) and 3283 elements
Cutoff increment increased from 1e-05 to 0.000999
Cbc0038I Initial state - 68 integers unsatisfied sum - 4.47238
Cbc0038I Pass   1: suminf.    4.10443 (94) obj. 2.19855 iterations 272
Cbc0038I Pass   2: suminf.    3.01566 (91) obj. 2.32405 iterations 39
Cbc0038I Pass   3: suminf.    2.92268 (91) obj. 2.20064 iterations 22
Cbc0038I Pass   4: suminf.    2.84227 (90) obj. 2.3026 iterations 42
Cbc0038I Pass   5: suminf.    2.79392 (94) obj. 2.28833 iterations 28
Cbc0038I Pass   6: suminf.    2.90908 (71) obj. 12.6463 iterations 86
Cbc0038I Pass   7: suminf.    2.90895 (70) obj. 12.6464 iterations 6
Cbc0038I Pass   8: suminf.    8.68486 (32) obj. 22.5119 iterations 102
Cbc0038I Pass   9: suminf.    2.32189 (55) obj. 14.7028 iterations 65
Cbc0038I Pass  10: suminf.    2.05445 (58) obj. 14.5045 iterations 45
Cbc0038I Pass  11: suminf.    8.36667 (29) obj. 38.4367 iterations 76
Cbc0038I Pass  12: suminf.    7.36667 (27) obj. 37.4367 iterations 4
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 50.815 iterations 60
Cbc0038I Solution found of 50.815
Cbc0038I Relaxing continuous gives 50.815
Cbc0038I Rounding solution of 16.315 is better than previous of 50.815

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 20 continuous
Cbc0038I Full problem 924 rows 268 columns, reduced to 565 rows 177 columns - 13 fixed gives 131, 64 - ok now
Cbc0038I Full problem 924 rows 268 columns, reduced to 41 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 16.315 to 15.315 (0.08 seconds)
Cbc0038I Round again with cutoff of 13.9714
Cbc0038I Pass  14: suminf.    4.10443 (94) obj. 2.19855 iterations 0
Cbc0038I Pass  15: suminf.    2.95982 (83) obj. 2.67297 iterations 67
Cbc0038I Pass  16: suminf.    2.66276 (96) obj. 2.37737 iterations 44
Cbc0038I Pass  17: suminf.    2.44626 (73) obj. 4.68951 iterations 58
Cbc0038I Pass  18: suminf.    2.06604 (72) obj. 4.32589 iterations 33
Cbc0038I Pass  19: suminf.    3.15591 (55) obj. 10.6641 iterations 105
Cbc0038I Pass  20: suminf.    2.90895 (70) obj. 10.6464 iterations 38
Cbc0038I Pass  21: suminf.    4.09299 (40) obj. 13.9714 iterations 86
Cbc0038I Pass  22: suminf.    2.05445 (58) obj. 12.5045 iterations 68
Cbc0038I Pass  23: suminf.    2.55990 (31) obj. 13.9714 iterations 67
Cbc0038I Pass  24: suminf.    2.17774 (38) obj. 12.7156 iterations 30
Cbc0038I Pass  25: suminf.    1.89994 (56) obj. 12.5757 iterations 37
Cbc0038I Pass  26: suminf.    2.26754 (25) obj. 13.9714 iterations 56
Cbc0038I Pass  27: suminf.    2.00877 (28) obj. 12.9611 iterations 45
Cbc0038I Pass  28: suminf.    1.77734 (50) obj. 12.7668 iterations 26
Cbc0038I Pass  29: suminf.    2.32081 (29) obj. 13.9714 iterations 51
Cbc0038I Pass  30: suminf.    5.41194 (15) obj. 13.9714 iterations 92
Cbc0038I Pass  31: suminf.    1.62807 (34) obj. 10.7677 iterations 77
Cbc0038I Pass  32: suminf.    4.30817 (28) obj. 13.9714 iterations 48
Cbc0038I Pass  33: suminf.    2.80435 (35) obj. 13.1446 iterations 49
Cbc0038I Pass  34: suminf.    3.66803 (21) obj. 13.9714 iterations 48
Cbc0038I Pass  35: suminf.    3.43583 (38) obj. 13.9714 iterations 89
Cbc0038I Pass  36: suminf.    2.85600 (30) obj. 13.9714 iterations 52
Cbc0038I Pass  37: suminf.    3.18713 (19) obj. 13.9714 iterations 40
Cbc0038I Pass  38: suminf.    2.35029 (26) obj. 13.9714 iterations 17
Cbc0038I Pass  39: suminf.    1.75744 (4) obj. 13.9714 iterations 51
Cbc0038I Pass  40: suminf.    0.00000 (0) obj. 13.214 iterations 25
Cbc0038I Solution found of 13.214
Cbc0038I Relaxing continuous gives 13.214
Cbc0038I Rounding solution of 8.914 is better than previous of 13.214

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 23 continuous
Cbc0038I Full problem 924 rows 268 columns, reduced to 659 rows 190 columns - 26 fixed gives 218, 87 - ok now
Cbc0038I Full problem 924 rows 268 columns, reduced to 165 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of 7.50809
Cbc0038I Pass  41: suminf.    4.10443 (94) obj. 2.19855 iterations 0
Cbc0038I Pass  42: suminf.    2.29203 (78) obj. 4.72757 iterations 107
Cbc0038I Pass  43: suminf.    2.06346 (77) obj. 4.46263 iterations 33
Cbc0038I Pass  44: suminf.    3.24463 (67) obj. 7.50809 iterations 77
Cbc0038I Pass  45: suminf.    1.72356 (88) obj. 5.51983 iterations 189
Cbc0038I Pass  46: suminf.    1.60892 (72) obj. 5.45045 iterations 34
Cbc0038I Pass  47: suminf.    3.37747 (63) obj. 7.50809 iterations 132
Cbc0038I Pass  48: suminf.    3.97221 (66) obj. 7.50809 iterations 155
Cbc0038I Pass  49: suminf.    1.60377 (70) obj. 5.65245 iterations 111
Cbc0038I Pass  50: suminf.    3.17834 (56) obj. 7.50809 iterations 97
Cbc0038I Pass  51: suminf.    1.71753 (85) obj. 5.72045 iterations 110
Cbc0038I Pass  52: suminf.    5.23048 (40) obj. 7.50809 iterations 150
Cbc0038I Pass  53: suminf.    2.12323 (58) obj. 5.68898 iterations 126
Cbc0038I Pass  54: suminf.    2.04087 (62) obj. 5.71612 iterations 33
Cbc0038I Pass  55: suminf.    3.61930 (42) obj. 7.50809 iterations 84
Cbc0038I Pass  56: suminf.    2.86827 (55) obj. 7.50809 iterations 66
Cbc0038I Pass  57: suminf.    1.92840 (67) obj. 6.8893 iterations 49
Cbc0038I Pass  58: suminf.    1.75198 (46) obj. 7.50809 iterations 110
Cbc0038I Pass  59: suminf.    1.69628 (45) obj. 7.50809 iterations 40
Cbc0038I Pass  60: suminf.    2.20947 (30) obj. 7.50809 iterations 48
Cbc0038I Pass  61: suminf.    1.52000 (45) obj. 6.91655 iterations 67
Cbc0038I Pass  62: suminf.    2.01557 (31) obj. 7.50809 iterations 66
Cbc0038I Pass  63: suminf.    1.51200 (41) obj. 7.01604 iterations 39
Cbc0038I Pass  64: suminf.    2.01894 (34) obj. 7.50809 iterations 39
Cbc0038I Pass  65: suminf.    2.07252 (29) obj. 7.50809 iterations 123
Cbc0038I Pass  66: suminf.    1.52027 (51) obj. 7.32076 iterations 110
Cbc0038I Pass  67: suminf.    1.60163 (34) obj. 7.50809 iterations 63
Cbc0038I Pass  68: suminf.    1.50741 (38) obj. 7.41622 iterations 34
Cbc0038I Pass  69: suminf.    1.60388 (35) obj. 7.50809 iterations 33
Cbc0038I Pass  70: suminf.    2.64466 (35) obj. 7.50809 iterations 150
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 25 continuous
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of 8.914 - took 0.17 seconds
Cbc0012I Integer solution of 8.914 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0012I Integer solution of 5.815 found by DiveCoefficient after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 924 rows 268 columns, reduced to 262 rows 106 columns
Cbc0031I 77 added rows had average density of 55.181818
Cbc0013I At root node, 77 cuts changed objective from 1.8884371 to 3.3670511 in 77 passes
Cbc0014I Cut generator 0 (Probing) - 474 row cuts average 23.1 elements, 6 column cuts (21 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 170.6 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 281 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 11 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 175 row cuts average 108.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 188 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 5.815 best solution, best possible 3.3670511 (1.56 seconds)
Cbc0012I Integer solution of 4.715 found by DiveCoefficient after 6913 iterations and 1 nodes (1.76 seconds)
Cbc0016I Integer solution of 3.614 found by strong branching after 9641 iterations and 15 nodes (2.79 seconds)
Cbc0001I Search completed - best objective 3.613999999999999, took 10703 iterations and 22 nodes (2.85 seconds)
Cbc0032I Strong branching done 544 times (30284 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 10, 134 variables fixed on reduced cost
Cuts at root node changed objective from 1.88844 to 3.36705
Probing was tried 123 times and created 935 cuts of which 15 were active after adding rounds of cuts (0.147 seconds)
Gomory was tried 123 times and created 862 cuts of which 0 were active after adding rounds of cuts (0.098 seconds)
Knapsack was tried 77 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 77 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 123 times and created 493 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
FlowCover was tried 77 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 123 times and created 380 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)
ZeroHalf was tried 123 times and created 404 cuts of which 0 were active after adding rounds of cuts (0.095 seconds)
ImplicationCuts was tried 38 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                3.61400000
Enumerated nodes:               22
Total iterations:               10703
Time (CPU seconds):             2.81
Time (Wallclock seconds):       2.86

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.81   (Wallclock seconds):       2.87

Root classes: ['23']
Status: Optimal
Solved x values:
['0.0', '1.2', '2.2', '4.2', '5.2', '7.2', '8.2', '12.2', '13.2', '15.2', '16.2', '18.2', '19.2', '23.9', '48.0', '75.16', '77.2', '78.2', '106.7', '141.2', '142.2', '263.2', '264.2']
