Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /work/zhang-x2/users/yc2632/miniconda3/envs/newpt2/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4da769d71f454a138c4eb5bd42bf2b2b-pulp.mps sec 900 timeMode elapsed branch printingOptions all solution /tmp/4da769d71f454a138c4eb5bd42bf2b2b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24430 COLUMNS
At line 363432 RHS
At line 387858 BOUNDS
At line 396361 ENDATA
Problem MODEL has 24425 rows, 8502 columns and 314497 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 900
Option for timeMode changed from cpu to elapsed
Continuous objective value is 19 - 0.06 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 4453 strengthened rows, 0 substitutions
Cgl0004I processed model has 14615 rows, 6123 columns (4506 integer (4506 of which binary)) and 78144 elements
Cbc0038I Initial state - 40 integers unsatisfied sum - 3.70005
Cbc0038I Pass   1: (0.38 seconds) suminf.    3.33198 (60) obj. 13970.6 iterations 171
Cbc0038I Pass   2: (0.40 seconds) suminf.    2.11769 (43) obj. 58262.7 iterations 68
Cbc0038I Pass   3: (0.40 seconds) suminf.    2.11769 (43) obj. 58262.7 iterations 2
Cbc0038I Pass   4: (0.41 seconds) suminf.    0.00004 (7) obj. 100038 iterations 33
Cbc0038I Pass   5: (0.42 seconds) suminf.    0.00004 (7) obj. 100038 iterations 3
Cbc0038I Pass   6: (0.42 seconds) suminf.    0.00004 (7) obj. 100038 iterations 0
Cbc0038I Pass   7: (0.47 seconds) suminf.    6.33394 (133) obj. 2.01938e+06 iterations 1841
Cbc0038I Pass   8: (0.49 seconds) suminf.    1.33387 (110) obj. 1.98687e+06 iterations 467
Cbc0038I Pass   9: (0.50 seconds) suminf.    1.33386 (109) obj. 1.98687e+06 iterations 7
Cbc0038I Pass  10: (0.51 seconds) suminf.    0.00054 (107) obj. 2.00021e+06 iterations 9
Cbc0038I Pass  11: (0.51 seconds) suminf.    0.00054 (107) obj. 2.00021e+06 iterations 0
Cbc0038I Pass  12: (0.54 seconds) suminf.    0.00087 (152) obj. 3.5203e+06 iterations 1179
Cbc0038I Pass  13: (0.55 seconds) suminf.    0.00068 (124) obj. 3.5203e+06 iterations 289
Cbc0038I Pass  14: (0.56 seconds) suminf.    0.00068 (124) obj. 3.5203e+06 iterations 0
Cbc0038I Pass  15: (0.58 seconds) suminf.    2.00104 (177) obj. 4.87042e+06 iterations 932
Cbc0038I Pass  16: (0.59 seconds) suminf.    0.00093 (159) obj. 4.85042e+06 iterations 199
Cbc0038I Pass  17: (0.61 seconds) suminf.    0.00091 (156) obj. 4.85042e+06 iterations 1
Cbc0038I Pass  18: (0.61 seconds) suminf.    0.00091 (156) obj. 4.85042e+06 iterations 0
Cbc0038I Pass  19: (0.63 seconds) suminf.    0.00108 (191) obj. 6.06051e+06 iterations 779
Cbc0038I Pass  20: (0.65 seconds) suminf.    0.00098 (177) obj. 6.06051e+06 iterations 138
Cbc0038I Pass  21: (0.65 seconds) suminf.    0.00098 (177) obj. 6.06051e+06 iterations 0
Cbc0038I Pass  22: (0.67 seconds) suminf.    0.00125 (207) obj. 6.86057e+06 iterations 747
Cbc0038I Pass  23: (0.69 seconds) suminf.    0.00115 (194) obj. 6.86057e+06 iterations 161
Cbc0038I Pass  24: (0.69 seconds) suminf.    0.00115 (194) obj. 6.86057e+06 iterations 0
Cbc0038I Pass  25: (0.71 seconds) suminf.    0.00135 (224) obj. 7.57063e+06 iterations 674
Cbc0038I Pass  26: (0.73 seconds) suminf.    0.00129 (212) obj. 7.57063e+06 iterations 192
Cbc0038I Pass  27: (0.74 seconds) suminf.    0.00124 (209) obj. 7.57063e+06 iterations 2
Cbc0038I Pass  28: (0.76 seconds) suminf.    0.00153 (264) obj. 8.23069e+06 iterations 582
Cbc0038I Pass  29: (0.77 seconds) suminf.    0.00144 (247) obj. 8.23069e+06 iterations 158
Cbc0038I Pass  30: (0.78 seconds) suminf.    0.00144 (247) obj. 8.23069e+06 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2474 integers at bound fixed and 731 continuous
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 4701 rows 1968 columns
Cbc0038I Mini branch and bound did not improve solution (1.47 seconds)
Cbc0038I Full problem 14616 rows 6123 columns, reduced to 14616 rows 6123 columns - too large
Cbc0038I After 2.24 seconds - Feasibility pump exiting - took 1.87 seconds
Cbc0031I 10 added rows had average density of 19.1
Cbc0013I At root node, 10 cuts changed objective from 22.700016 to 25.000016 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.216 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 11 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 10 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 25.000016 (2.81 seconds)
Cbc0004I Integer solution of 10041 found after 1800 iterations and 79 nodes (7.63 seconds)
Cbc0004I Integer solution of 10040 found after 1808 iterations and 80 nodes (7.66 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 34 rows 20 columns
Cbc0012I Integer solution of 10039 found by RINS after 1944 iterations and 90 nodes (7.86 seconds)
Cbc0010I After 100 nodes, 47 on tree, 10039 best solution, best possible 25.000016 (8.13 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 11 rows 9 columns
Cbc0010I After 200 nodes, 49 on tree, 10039 best solution, best possible 25.000016 (9.96 seconds)
Cbc0012I Integer solution of 10037 found by rounding after 3596 iterations and 288 nodes (11.36 seconds)
Cbc0004I Integer solution of 10036 found after 3603 iterations and 289 nodes (11.39 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 13 rows 10 columns
Cbc0010I After 300 nodes, 50 on tree, 10036 best solution, best possible 25.000016 (11.67 seconds)
Cbc0010I After 400 nodes, 54 on tree, 10036 best solution, best possible 25.000016 (13.22 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 9 rows 7 columns
Cbc0010I After 500 nodes, 71 on tree, 10036 best solution, best possible 25.000016 (15.37 seconds)
Cbc0010I After 600 nodes, 76 on tree, 10036 best solution, best possible 25.000016 (16.95 seconds)
Cbc0010I After 700 nodes, 58 on tree, 10036 best solution, best possible 25.000016 (18.07 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 35 rows 23 columns
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 20 rows 14 columns
Cbc0010I After 800 nodes, 47 on tree, 10036 best solution, best possible 25.000016 (19.53 seconds)
Cbc0004I Integer solution of 40 found after 9855 iterations and 900 nodes (21.21 seconds)
Cbc0010I After 900 nodes, 35 on tree, 40 best solution, best possible 25.000016 (21.21 seconds)
Cbc0004I Integer solution of 39 found after 10490 iterations and 935 nodes (22.39 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 94 rows 58 columns
Cbc0010I After 1000 nodes, 51 on tree, 39 best solution, best possible 25.000016 (24.44 seconds)
Cbc0010I After 1100 nodes, 72 on tree, 39 best solution, best possible 25.000016 (27.52 seconds)
Cbc0012I Integer solution of 37 found by rounding after 14084 iterations and 1179 nodes (29.18 seconds)
Cbc0004I Integer solution of 36 found after 14101 iterations and 1180 nodes (29.21 seconds)
Cbc0010I After 1200 nodes, 52 on tree, 36 best solution, best possible 25.000016 (30.12 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 141 rows 71 columns
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 131 rows 66 columns
Cbc0010I After 1300 nodes, 59 on tree, 36 best solution, best possible 25.000016 (33.48 seconds)
Cbc0010I After 1400 nodes, 67 on tree, 36 best solution, best possible 25.000016 (35.87 seconds)
Cbc0010I After 1500 nodes, 64 on tree, 36 best solution, best possible 25.000016 (38.22 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 177 rows 81 columns
Cbc0010I After 1600 nodes, 63 on tree, 36 best solution, best possible 25.000016 (41.02 seconds)
Cbc0010I After 1700 nodes, 65 on tree, 36 best solution, best possible 25.000016 (43.49 seconds)
Cbc0010I After 1800 nodes, 65 on tree, 36 best solution, best possible 25.000016 (46.30 seconds)
Cbc0010I After 1900 nodes, 58 on tree, 36 best solution, best possible 25.000016 (49.13 seconds)
Cbc0010I After 2000 nodes, 54 on tree, 36 best solution, best possible 25.000016 (51.74 seconds)
Cbc0010I After 2100 nodes, 53 on tree, 36 best solution, best possible 25.000016 (54.53 seconds)
Cbc0010I After 2200 nodes, 47 on tree, 36 best solution, best possible 25.000016 (57.49 seconds)
Cbc0010I After 2300 nodes, 39 on tree, 36 best solution, best possible 25.000016 (60.42 seconds)
Cbc0010I After 2400 nodes, 41 on tree, 36 best solution, best possible 25.000016 (63.28 seconds)
Cbc0010I After 2500 nodes, 37 on tree, 36 best solution, best possible 25.000016 (66.56 seconds)
Cbc0010I After 2600 nodes, 22 on tree, 36 best solution, best possible 25.000016 (69.26 seconds)
Cbc0010I After 2700 nodes, 30 on tree, 36 best solution, best possible 25.000016 (71.89 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 94 rows 56 columns
Cbc0010I After 2800 nodes, 20 on tree, 36 best solution, best possible 25.000016 (74.48 seconds)
Cbc0010I After 2900 nodes, 13 on tree, 36 best solution, best possible 25.000016 (77.18 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 80 rows 34 columns
Cbc0010I After 3000 nodes, 20 on tree, 36 best solution, best possible 25.000016 (80.46 seconds)
Cbc0010I After 3100 nodes, 28 on tree, 36 best solution, best possible 25.000016 (82.84 seconds)
Cbc0010I After 3200 nodes, 31 on tree, 36 best solution, best possible 25.000016 (84.51 seconds)
Cbc0010I After 3300 nodes, 34 on tree, 36 best solution, best possible 25.000016 (86.45 seconds)
Cbc0010I After 3400 nodes, 34 on tree, 36 best solution, best possible 25.000016 (88.39 seconds)
Cbc0010I After 3500 nodes, 31 on tree, 36 best solution, best possible 25.000016 (89.88 seconds)
Cbc0010I After 3600 nodes, 14 on tree, 36 best solution, best possible 25.000016 (91.50 seconds)
Cbc0010I After 3700 nodes, 29 on tree, 36 best solution, best possible 25.000016 (94.64 seconds)
Cbc0010I After 3800 nodes, 13 on tree, 36 best solution, best possible 25.000016 (96.09 seconds)
Cbc0010I After 3900 nodes, 22 on tree, 36 best solution, best possible 25.000016 (97.99 seconds)
Cbc0010I After 4000 nodes, 9 on tree, 36 best solution, best possible 25.000016 (99.33 seconds)
Cbc0010I After 4100 nodes, 28 on tree, 36 best solution, best possible 25.000016 (102.02 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 76 rows 49 columns
Cbc0010I After 4200 nodes, 21 on tree, 36 best solution, best possible 25.000016 (103.62 seconds)
Cbc0010I After 4300 nodes, 19 on tree, 36 best solution, best possible 25.000016 (105.72 seconds)
Cbc0010I After 4400 nodes, 35 on tree, 36 best solution, best possible 25.000016 (108.47 seconds)
Cbc0010I After 4500 nodes, 30 on tree, 36 best solution, best possible 25.000016 (110.05 seconds)
Cbc0010I After 4600 nodes, 42 on tree, 36 best solution, best possible 25.000016 (113.08 seconds)
Cbc0010I After 4700 nodes, 37 on tree, 36 best solution, best possible 25.000016 (115.44 seconds)
Cbc0010I After 4800 nodes, 23 on tree, 36 best solution, best possible 25.000016 (117.86 seconds)
Cbc0010I After 4900 nodes, 18 on tree, 36 best solution, best possible 25.000016 (121.98 seconds)
Cbc0010I After 5000 nodes, 23 on tree, 36 best solution, best possible 25.000016 (124.19 seconds)
Cbc0010I After 5100 nodes, 8 on tree, 36 best solution, best possible 25.000016 (127.17 seconds)
Cbc0010I After 5200 nodes, 2 on tree, 36 best solution, best possible 29.711597 (132.59 seconds)
Cbc0010I After 5300 nodes, 10 on tree, 36 best solution, best possible 29.711597 (135.60 seconds)
Cbc0010I After 5400 nodes, 5 on tree, 36 best solution, best possible 30.901078 (139.53 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 213 rows 89 columns
Cbc0001I Search completed - best objective 36, took 79751 iterations and 5487 nodes (142.70 seconds)
Cbc0032I Strong branching done 9932 times (87269 iterations), fathomed 362 nodes and fixed 1123 variables
Cbc0035I Maximum depth 67, 433842 variables fixed on reduced cost
Cuts at root node changed objective from 22.7 to 25
Probing was tried 4034 times and created 2040 cuts of which 0 were active after adding rounds of cuts (0.605 seconds)
Gomory was tried 4034 times and created 761 cuts of which 0 were active after adding rounds of cuts (4.602 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4034 times and created 3001 cuts of which 0 were active after adding rounds of cuts (12.827 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 4034 times and created 158 cuts of which 0 were active after adding rounds of cuts (9.049 seconds)
ZeroHalf was tried 4034 times and created 15776 cuts of which 0 were active after adding rounds of cuts (74.535 seconds)

Result - Optimal solution found

Objective value:                36.00000000
Enumerated nodes:               5487
Total iterations:               79751
Time (CPU seconds):             142.53
Time (Wallclock seconds):       142.77

Option for printingOptions changed from normal to all
Total time (CPU seconds):       142.61   (Wallclock seconds):       142.85

Root classes: ['0', '1', '38', '39', '52', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81']
Status: Optimal
Solved x values:
['0.0', '94.0', '79.0', '76.0', '73.0', '70.0', '67.0', '64.0', '61.0', '58.0', '55.0', '52.0', '46.0', '43.0', '40.0', '37.0', '31.0', '28.0', '25.0', '654.21', '22.0', '273.0', '19.0', '16.0', '13.0', '10.0', '1017.31', '7.0', '4.0', '1.0', '125.6', '125.42', '122.30', '119.21', '98.0', '80.0', '77.0', '74.0', '71.0', '68.0', '65.0', '62.0', '59.0', '56.0', '53.0', '50.34', '44.0', '41.0', '38.0', '35.0', '32.0', '29.0', '26.0', '404.28', '277.38', '23.0', '20.0', '17.0', '141.0', '14.0', '138.0', '11.0', '8.0', '5.0', '2.0', '99.0', '93.0', '81.0', '78.0', '75.0', '72.0', '69.0', '66.0', '63.0', '60.0', '57.0', '54.0', '51.0', '48.34', '45.0', '42.0', '39.0', '33.0', '30.0', '408.28', '27.0', '24.0', '21.0', '18.0', '142.4', '15.0', '139.4', '12.0', '9.0', '6.0', '3.0']
