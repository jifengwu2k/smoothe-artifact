Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /work/zhang-x2/users/yc2632/miniconda3/envs/newpt2/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/95186162b2854eac87010aac7874d73d-pulp.mps sec 900 timeMode elapsed branch printingOptions all solution /tmp/95186162b2854eac87010aac7874d73d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24430 COLUMNS
At line 363432 RHS
At line 387858 BOUNDS
At line 396361 ENDATA
Problem MODEL has 24425 rows, 8502 columns and 314497 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 900
Option for timeMode changed from cpu to elapsed
Continuous objective value is 19 - 0.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 4453 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 14615 rows, 6123 columns (4506 integer (4506 of which binary)) and 78143 elements
Cbc0038I Initial state - 68 integers unsatisfied sum - 3.75153
Cbc0038I Pass   1: (0.48 seconds) suminf.    3.33313 (103) obj. 16326.4 iterations 288
Cbc0038I Pass   2: (0.49 seconds) suminf.    2.11883 (84) obj. 60618.4 iterations 53
Cbc0038I Pass   3: (0.49 seconds) suminf.    2.11883 (84) obj. 60618.4 iterations 0
Cbc0038I Pass   4: (0.50 seconds) suminf.    0.00118 (48) obj. 120039 iterations 33
Cbc0038I Pass   5: (0.50 seconds) suminf.    0.00118 (48) obj. 120039 iterations 0
Cbc0038I Pass   6: (0.50 seconds) suminf.    0.00118 (48) obj. 120039 iterations 0
Cbc0038I Pass   7: (0.55 seconds) suminf.    6.33450 (132) obj. 2.24935e+06 iterations 1786
Cbc0038I Pass   8: (0.57 seconds) suminf.    1.33444 (110) obj. 2.21685e+06 iterations 691
Cbc0038I Pass   9: (0.59 seconds) suminf.    1.33444 (110) obj. 2.21685e+06 iterations 5
Cbc0038I Pass  10: (0.60 seconds) suminf.    0.00112 (108) obj. 2.23019e+06 iterations 11
Cbc0038I Pass  11: (0.60 seconds) suminf.    0.00112 (108) obj. 2.23019e+06 iterations 0
Cbc0038I Pass  12: (0.63 seconds) suminf.    0.00140 (150) obj. 3.90026e+06 iterations 1187
Cbc0038I Pass  13: (0.64 seconds) suminf.    0.00123 (124) obj. 3.90026e+06 iterations 284
Cbc0038I Pass  14: (0.65 seconds) suminf.    0.00123 (124) obj. 3.90026e+06 iterations 0
Cbc0038I Pass  15: (0.67 seconds) suminf.    2.00161 (175) obj. 5.35037e+06 iterations 974
Cbc0038I Pass  16: (0.69 seconds) suminf.    0.00148 (153) obj. 5.33037e+06 iterations 203
Cbc0038I Pass  17: (0.70 seconds) suminf.    0.00147 (153) obj. 5.33037e+06 iterations 2
Cbc0038I Pass  18: (0.70 seconds) suminf.    0.00147 (153) obj. 5.33037e+06 iterations 0
Cbc0038I Pass  19: (0.72 seconds) suminf.    0.00165 (187) obj. 6.67044e+06 iterations 745
Cbc0038I Pass  20: (0.74 seconds) suminf.    0.00154 (173) obj. 6.67044e+06 iterations 137
Cbc0038I Pass  21: (0.74 seconds) suminf.    0.00154 (173) obj. 6.67044e+06 iterations 0
Cbc0038I Pass  22: (0.76 seconds) suminf.    0.00180 (210) obj. 7.43051e+06 iterations 720
Cbc0038I Pass  23: (0.78 seconds) suminf.    0.00169 (196) obj. 7.43051e+06 iterations 178
Cbc0038I Pass  24: (0.78 seconds) suminf.    0.00169 (196) obj. 7.43051e+06 iterations 0
Cbc0038I Pass  25: (0.80 seconds) suminf.    0.00185 (219) obj. 8.21056e+06 iterations 685
Cbc0038I Pass  26: (0.82 seconds) suminf.    0.00181 (210) obj. 8.21056e+06 iterations 196
Cbc0038I Pass  27: (0.83 seconds) suminf.    0.00180 (211) obj. 8.21056e+06 iterations 2
Cbc0038I Pass  28: (0.85 seconds) suminf.    0.00206 (260) obj. 8.95062e+06 iterations 642
Cbc0038I Pass  29: (0.87 seconds) suminf.    0.00196 (239) obj. 8.95062e+06 iterations 149
Cbc0038I Pass  30: (0.87 seconds) suminf.    0.00196 (239) obj. 8.95062e+06 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2469 integers at bound fixed and 730 continuous
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 4728 rows 1972 columns
Cbc0038I Mini branch and bound did not improve solution (0.94 seconds)
Cbc0038I Full problem 14616 rows 6123 columns, reduced to 14616 rows 6123 columns - too large
Cbc0038I After 1.51 seconds - Feasibility pump exiting - took 1.05 seconds
Cbc0012I Integer solution of 39 found by DiveCoefficient after 0 iterations and 0 nodes (1.55 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 209 rows 96 columns
Cbc0012I Integer solution of 38 found by DiveCoefficient after 54 iterations and 0 nodes (1.73 seconds)
Cbc0031I 11 added rows had average density of 4.1818182
Cbc0013I At root node, 11 cuts changed objective from 22.750354 to 25.00036 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 10 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 38 best solution, best possible 25.00036 (1.74 seconds)
Cbc0038I Full problem 14615 rows 6123 columns, reduced to 110 rows 69 columns
Cbc0038I Full problem 14626 rows 6123 columns, reduced to 1933 rows 849 columns
Cbc0044I Reduced cost fixing - 1933 rows, 849 columns - restarting search
Cbc0012I Integer solution of 38 found by Previous solution after 0 iterations and 0 nodes (2.53 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 186 rows 89 columns
Cbc0031I 17 added rows had average density of 5.4705882
Cbc0013I At root node, 17 cuts changed objective from 22.750354 to 25.00036 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 5 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 28 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 38 best solution, best possible 25.00036 (2.61 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 184 rows 88 columns
Cbc0010I After 100 nodes, 7 on tree, 38 best solution, best possible 25.00036 (3.43 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 39 rows 26 columns
Cbc0010I After 200 nodes, 16 on tree, 38 best solution, best possible 25.00036 (4.15 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 39 rows 26 columns
Cbc0010I After 300 nodes, 42 on tree, 38 best solution, best possible 25.00036 (4.37 seconds)
Cbc0010I After 400 nodes, 44 on tree, 38 best solution, best possible 25.00036 (4.53 seconds)
Cbc0012I Integer solution of 37 found by rounding after 3292 iterations and 497 nodes (4.77 seconds)
Cbc0010I After 500 nodes, 5 on tree, 37 best solution, best possible 25.00036 (4.78 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 101 rows 60 columns
Cbc0038I Full problem 1933 rows 849 columns, reduced to 91 rows 53 columns
Cbc0010I After 600 nodes, 18 on tree, 37 best solution, best possible 25.00036 (5.17 seconds)
Cbc0010I After 700 nodes, 20 on tree, 37 best solution, best possible 25.00036 (5.32 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 115 rows 52 columns
Cbc0010I After 800 nodes, 9 on tree, 37 best solution, best possible 25.00036 (5.75 seconds)
Cbc0038I Full problem 1933 rows 849 columns, reduced to 112 rows 64 columns
Cbc0010I After 900 nodes, 8 on tree, 37 best solution, best possible 25.00036 (6.36 seconds)
Cbc0010I After 1000 nodes, 4 on tree, 37 best solution, best possible 27.174277 (6.82 seconds)
Cbc0016I Integer solution of 36 found by strong branching after 9693 iterations and 1095 nodes (7.47 seconds)
Cbc0010I After 1100 nodes, 21 on tree, 36 best solution, best possible 27.174277 (7.48 seconds)
Cbc0010I After 1200 nodes, 34 on tree, 36 best solution, best possible 27.174277 (7.71 seconds)
Cbc0010I After 1300 nodes, 52 on tree, 36 best solution, best possible 27.174277 (7.93 seconds)
Cbc0010I After 1400 nodes, 51 on tree, 36 best solution, best possible 27.174277 (8.14 seconds)
Cbc0010I After 1500 nodes, 38 on tree, 36 best solution, best possible 27.174277 (8.42 seconds)
Cbc0010I After 1600 nodes, 27 on tree, 36 best solution, best possible 27.174277 (8.59 seconds)
Cbc0010I After 1700 nodes, 9 on tree, 36 best solution, best possible 27.174277 (8.85 seconds)
Cbc0010I After 1800 nodes, 5 on tree, 36 best solution, best possible 27.174277 (9.09 seconds)
Cbc0001I Search completed - best objective 36, took 18590 iterations and 1893 nodes (9.59 seconds)
Cbc0032I Strong branching done 4724 times (28378 iterations), fathomed 56 nodes and fixed 456 variables
Cbc0035I Maximum depth 36, 95793 variables fixed on reduced cost
Cbc0038I Probing was tried 1094 times and created 2468 cuts of which 0 were active after adding rounds of cuts (0.253 seconds)
Cbc0038I Gomory was tried 242 times and created 192 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Cbc0038I Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 1063 times and created 593 cuts of which 0 were active after adding rounds of cuts (0.497 seconds)
Cbc0038I FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 1063 times and created 94 cuts of which 0 were active after adding rounds of cuts (0.235 seconds)
Cbc0038I ZeroHalf was tried 3 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Stored from first was tried 1063 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 36 found by Reduced search after 19185 iterations and 1943 nodes (9.60 seconds)
Cbc0001I Search completed - best objective 36, took 19185 iterations and 1943 nodes (9.60 seconds)
Cbc0032I Strong branching done 752 times (6764 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 24, 2578 variables fixed on reduced cost
Cuts at root node changed objective from 22.7504 to 25.0004
Probing was tried 22 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 22 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 22 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)

Result - Optimal solution found

Objective value:                36.00000000
Enumerated nodes:               1943
Total iterations:               19185
Time (CPU seconds):             9.62
Time (Wallclock seconds):       9.67

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.69   (Wallclock seconds):       9.75

Root classes: ['0', '1', '38', '39', '52', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81']
Status: Optimal
Solved x values:
['0.0', '94.0', '79.0', '76.0', '73.0', '70.0', '67.0', '64.0', '61.0', '58.0', '55.0', '52.0', '46.0', '43.0', '40.0', '37.0', '31.0', '28.0', '25.0', '654.25', '22.0', '273.0', '19.0', '16.0', '13.0', '10.0', '1017.0', '7.0', '4.0', '1.0', '125.6', '125.42', '122.23', '119.23', '98.0', '80.0', '77.0', '74.0', '71.0', '68.0', '65.0', '62.0', '59.0', '56.0', '53.0', '50.34', '44.0', '41.0', '38.0', '35.0', '32.0', '29.0', '26.0', '404.23', '277.23', '23.0', '20.0', '17.0', '141.25', '14.0', '138.0', '11.0', '8.0', '5.0', '2.0', '99.0', '93.0', '81.0', '78.0', '75.0', '72.0', '69.0', '66.0', '63.0', '60.0', '57.0', '54.0', '51.0', '48.34', '45.0', '42.0', '39.0', '33.0', '30.0', '408.23', '27.0', '24.0', '21.0', '18.0', '142.4', '15.0', '139.4', '12.0', '9.0', '6.0', '3.0']
